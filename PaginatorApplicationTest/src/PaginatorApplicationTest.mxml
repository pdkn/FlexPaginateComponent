<?xml version="1.0" encoding="utf-8"?>
<!--
MIT License - http://www.opensource.org/licenses/mit-license.html

Copyright (c) 2010 paddy.keane

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
-->
<mx:Application
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:pdkn="pdkn.flex.components.*"
	verticalScrollPolicy="off"
    layout="vertical" backgroundColor="0xCCCCCC"
    creationComplete="init()"
>
    
	<mx:Style>
		.noArrowsScrollBar
		{
			upArrowSkin		: ClassReference( null );
			downArrowSkin	: ClassReference( null );
			thumb-skin		: ClassReference("PaginatorScrollBar_thumbSkin");
			track-skin		: ClassReference("PaginatorScrollBar_trackSkin");
			thumb-icon		: ClassReference( null );
		}
	</mx:Style>
	
	<mx:Script>
	<![CDATA[
		import flash.events.Event;
		import pdkn.flex.components.events.PaginateEvent;
	
		private function init():void
		{
			paginator.scroller.setStyle("styleName", "noArrowsScrollBar");
		}
		
		private function intervalChangeHandler(e:Event):void
		{
			paginator.itemsPerPage = itemsPerPageStepper.value;			
		}
		
		private function selectedIndexStepperHandler(e:Event):void
		{
			paginator.selectedIndex = selectedIndexStepper.value;
		}
		
		
		private function pageChangeHandler(e:PaginateEvent):void
		{
			
			var page:int = e.index;
			
			var startIndex:int = (page * e.itemsPerPage) + 1;
			var endIndex:int = Math.min((startIndex + e.itemsPerPage -1), e.itemsTotal);
			
			txt.text = "Results: " + String(startIndex) + " - " + String(endIndex) + " of " + e.itemsTotal;
			
			selectedIndexStepper.maximum = paginator.pages-1;
			selectedIndexStepper.value = page;
			
		}
		
		
	]]>
	</mx:Script>

	<mx:VBox width="100%" horizontalAlign="center">
		<mx:VBox horizontalAlign="left" paddingBottom="20" paddingLeft="20" paddingRight="20" paddingTop="10">
			<mx:Label text="Paginator Parameters" textAlign="center" width="100%" fontSize="14" fontWeight="bold"/>
			<mx:Spacer height="1"/>
			<mx:HBox>
				<mx:Label width="150" text="Items Total: " textAlign="right"/>
				<mx:TextInput id="itemsTotalTxt" text="500" width="100"/>
			</mx:HBox>
			
			<mx:HBox>
				<mx:Label width="150" text="Item's Per Page: " textAlign="right"/>
				<mx:NumericStepper id="itemsPerPageStepper" width="100" value="50" minimum="50" maximum="1000" stepSize="50"  />
			</mx:HBox>
			
			<mx:HBox>
				<mx:Label width="150" text="No. of Pages to Display: " textAlign="right"/>
				<mx:NumericStepper id="rangeCountStepper" width="100" value="5" maximum="20" />
			</mx:HBox>
			
			<mx:HBox>
				<mx:Label width="150" text="selectedIndex: " textAlign="right"/>
				<mx:NumericStepper id="selectedIndexStepper" width="100" value="0" maximum="{paginator.pages}" click="selectedIndexStepperHandler(event)" />
			</mx:HBox>
				
		</mx:VBox>
		
		<mx:Spacer height="50" />
		
		<mx:VBox backgroundColor="#ffffff" paddingBottom="20" paddingLeft="20" paddingRight="20" paddingTop="10">
			<mx:Text id="txt" text="results indicator"/>
			<pdkn:Paginator id="paginator" 
				itemsPerPage="{itemsPerPageStepper.value}"
				rangeCount="{rangeCountStepper.value}"
				itemsTotal="{int(itemsTotalTxt.text) as int}"
				selectedIndex="0"
				pageChange="pageChangeHandler(event)" />
		</mx:VBox>
		
	</mx:VBox>
</mx:Application>
